/*! moment-weekday-calc 1.1.4 andruhon <andrew@kondratev.pro> 2019-01-29 */
"undefined"!=typeof require&&(moment=require("moment")),function(u){function r(e,t,a,n,s,r){if(this.rangeStart=u(e),this.rangeEnd=u(t),this.exclusions=n,this.inclusions=s,this.useIsoWeekday=1==r,this.rangeStart.isAfter(this.rangeEnd))throw new f("rangeStart is after rangeEnd");this.weekdays=i(a,this.useIsoWeekday)}function f(e){this.message=e,this.name="WeekDayCalcException"}function d(e,t,a,n,s){this.rangeStart=u(e),this.useIsoWeekday=1==s,this.exclusions=a,this.inclusions=n,this.weekdays=i(t,this.useIsoWeekday)}function c(e){this.message=e,this.name="DaysSetConverterException"}r.prototype.calculate=function(){var e=0,t=this.rangeStart.clone().endOf("week"),a=this.rangeEnd.clone().startOf("week");a.diff(t,"days")<30||this.exclusions||this.inclusions?e=this.calculateIterative(this.rangeStart,this.rangeEnd,this.weekdays,this.exclusions,this.inclusions):(e+=Math.round(a.diff(t,"weeks",!0))*this.weekdays.length,e+=this.calculateIterative(this.rangeStart,t,this.weekdays),e+=this.calculateIterative(a,this.rangeEnd,this.weekdays));return e},r.prototype.calculateIterative=function(e,t,a,n,s){return this.iterateRange(e,t,a,n,s,null)},r.prototype.iterateRange=function(e,t,a,n,s,r){for(var i=0,o=e.clone(),d=l(n),c=l(s);o.valueOf()<=t.valueOf();){var u=this.useIsoWeekday?"isoWeekday":"weekday",f=o.format("YYYY-MM-DD");(0!=c.length&&0<=c.indexOf(f)||0<=a.indexOf(o[u]())&&(0==d.length||d.indexOf(f)<0))&&(r&&"function"==typeof r&&r(o.clone()),i++),o.add(1,"day")}return i},Function.prototype.construct=function(e){var t=this,a=function(){t.apply(this,e)};return a.prototype=t.prototype,new a},f.prototype=new Error,r.prototype.WeekDayCalcException=f,d.prototype.calculate=function(e){var t=e,a=this.rangeStart.clone(),n=l(this.exclusions),s=l(this.inclusions),r=this.useIsoWeekday?"isoWeekday":"weekday";if(0<=t)for(;0<t;){a.add(1,"day"),(0!=s.length&&0<=s.indexOf(a.format("YYYY-MM-DD"))||0<=this.weekdays.indexOf(a[r]())&&(0==n.length||n.indexOf(a.format("YYYY-MM-DD"))<0))&&t--}else for(;t<0;){a.subtract(1,"day"),(0!=s.length&&0<=s.indexOf(a.format("YYYY-MM-DD"))||0<=this.weekdays.indexOf(a[r]())&&(0==n.length||n.indexOf(a.format("YYYY-MM-DD"))<0))&&t++}return a},c.prototype=new Error,d.prototype.DaysSetConverterException=c;var i=function(e,t){var a=[];if(!e)throw new f("weekdays must be defined");if(7<e.length)throw new f("Weekdays array exceeding week length of 7 days");for(var n=0;n<e.length;n++){var s=e[n];if(t){if(isNaN(s))throw new f("isoWeekDayCalc accepts weekdays as numbers only, try using weekdayCalc if you need a locale aware behaviour");if(s<1||7<s)throw new f("The weekday is out of 1 to 7 range")}else if(isNaN(s))s=u().day(s).weekday();else if(s<0||6<s)throw new f("The weekday is out of 0 to 6 range");if(0<=a.indexOf(s))throw new f("Weekdays set contains duplicate weekday");a.push(s)}return a},l=function(e){var t=[];if(e)for(var a=0,n=e.length;a<n;a++)t.push(u(e[a]).format("YYYY-MM-DD"));return t};r.parseParameters=function(e,t,a){var n,s,r,i,o;switch(a=!!a,t.length){case 5:i=t[3],o=t[4];case 4:i=t[3];case 3:n=u(t[0]).startOf("day"),s=u(t[1]).endOf("day"),r=t[2];break;case 2:n=e,s=t[0],r=t[1];break;case 1:var d=t[0];d&&d.rangeEnd&&d.weekdays?(n=d.rangeStart?u(d.rangeStart).startOf("day"):e,s=u(d.rangeEnd).endOf("day"),r=d.weekdays,i=d.exclusions,o=d.inclusions):(n=e.clone().startOf("year"),s=e.clone().endOf("year"),r=d);break;default:new f("unexpected arguments length "+t.length+". Expecting 1 to 4 args")}if(n.isAfter(s)){var c=n.clone();n=s.clone(),s=c}return[n,s,r,i,o,a]},r.calculateWeekdays=function(e,t,a){return r.construct(r.parseParameters(e,t,a)).calculate()},r.dateRangeToDates=function(e,t,a){var n=[],s=r.construct(r.parseParameters(e,t,a));return s.iterateRange(s.rangeStart,s.rangeEnd,s.weekdays,s.exclusions,s.inclusions,function(e){n.push(e)}),n},d.calculateDate=function(e,t,a){var n,s,r,i;a=!!a;switch(t.length){case 4:s=t[2],r=t[3];case 3:s=t[2];case 2:n=t[0],i=t[1];break;case 1:var o=t[0];if(!o||null==o.days&&null==o.workdays)n=o;else{if(null!=o.days&&null!=o.workdays)throw new c("days and weekdays args should not be used together, because weekdays is an alias of days");n=o.days?o.days:o.workdays,i=o.weekdays?o.weekdays:[1,2,3,4,5],s=o.exclusions,r=o.inclusions}break;default:new c("unexpected arguments length "+t.length+". Expecting 1 to 3 args")}return d.construct([e,i,s,r,a]).calculate(n)},u.fn.weekdayCalc=function(){return r.calculateWeekdays(this,arguments)},u.fn.isoWeekdayCalc=function(){return r.calculateWeekdays(this,arguments,!0)},u.fn.addWorkdays=function(e,t,a){return d.calculateDate(this,[e,[1,2,3,4,5],t,a])},u.fn.workdaysToCalendarDays=function(e,t,a){return d.calculateDate(this,[e,[1,2,3,4,5],t,a]).diff(this,"days")},u.fn.addWeekdaysFromSet=function(){return d.calculateDate(this,arguments)},u.fn.weekdaysFromSetToCalendarDays=function(){return d.calculateDate(this,arguments).diff(this,"days")},u.fn.isoAddWeekdaysFromSet=function(){return d.calculateDate(this,arguments,!0)},u.fn.isoWeekdaysFromSetToCalendarDays=function(){return d.calculateDate(this,arguments,!0).diff(this,"days")},u.fn.dateRangeToDates=function(){return r.dateRangeToDates(this,arguments)},u.fn.dateRangeToDatesIso=function(){return r.dateRangeToDates(this,arguments,!0)},"object"==typeof exports&&"undefined"!=typeof module?module.exports=r:"function"==typeof define&&define.amd?define(r):this.WeekDayCalc=r}(moment);
//# sourceMappingURL=moment-weekday-calc.min.js.map